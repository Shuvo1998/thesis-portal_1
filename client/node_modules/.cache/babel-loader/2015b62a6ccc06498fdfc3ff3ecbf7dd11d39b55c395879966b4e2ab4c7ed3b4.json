{"ast":null,"code":"import React,{useState}from'react';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function Upload(){const[title,setTitle]=useState('');const[author,setAuthor]=useState('');const[description,setDescription]=useState('');const[file,setFile]=useState(null);const handleSubmit=async e=>{e.preventDefault();if(!file)return alert('Please select a file.');const formData=new FormData();formData.append('file',file);formData.append('title',title);formData.append('author',author);formData.append('description',description);try{const res=await axios.post('http://localhost:5000/api/upload',formData);alert(res.data.message);}catch(err){console.error(err);alert('Upload failed.');}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Upload Thesis\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Title\",value:title,onChange:e=>setTitle(e.target.value)}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Author\",value:author,onChange:e=>setAuthor(e.target.value)}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"textarea\",{placeholder:\"Description\",value:description,onChange:e=>setDescription(e.target.value)}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",onChange:e=>setFile(e.target.files[0])}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Upload\"})]})]});}","map":{"version":3,"names":["React","useState","axios","jsx","_jsx","jsxs","_jsxs","Upload","title","setTitle","author","setAuthor","description","setDescription","file","setFile","handleSubmit","e","preventDefault","alert","formData","FormData","append","res","post","data","message","err","console","error","children","onSubmit","type","placeholder","value","onChange","target","files"],"sources":["D:/my-thesis-portal/client/src/Upload.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default function Upload() {\r\n  const [title, setTitle] = useState('');\r\n  const [author, setAuthor] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [file, setFile] = useState(null);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!file) return alert('Please select a file.');\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n    formData.append('title', title);\r\n    formData.append('author', author);\r\n    formData.append('description', description);\r\n\r\n    try {\r\n      const res = await axios.post('http://localhost:5000/api/upload', formData);\r\n      alert(res.data.message);\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert('Upload failed.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Upload Thesis</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input type=\"text\" placeholder=\"Title\" value={title} onChange={e => setTitle(e.target.value)} /><br/>\r\n        <input type=\"text\" placeholder=\"Author\" value={author} onChange={e => setAuthor(e.target.value)} /><br/>\r\n        <textarea placeholder=\"Description\" value={description} onChange={e => setDescription(e.target.value)} /><br/>\r\n        <input type=\"file\" onChange={e => setFile(e.target.files[0])} /><br/>\r\n        <button type=\"submit\">Upload</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE1B,cAAe,SAAS,CAAAC,MAAMA,CAAA,CAAG,CAC/B,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGR,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACS,MAAM,CAAEC,SAAS,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CACxC,KAAM,CAACW,WAAW,CAAEC,cAAc,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CAClD,KAAM,CAACa,IAAI,CAAEC,OAAO,CAAC,CAAGd,QAAQ,CAAC,IAAI,CAAC,CAEtC,KAAM,CAAAe,YAAY,CAAG,KAAO,CAAAC,CAAC,EAAK,CAChCA,CAAC,CAACC,cAAc,CAAC,CAAC,CAElB,GAAI,CAACJ,IAAI,CAAE,MAAO,CAAAK,KAAK,CAAC,uBAAuB,CAAC,CAEhD,KAAM,CAAAC,QAAQ,CAAG,GAAI,CAAAC,QAAQ,CAAC,CAAC,CAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,CAAER,IAAI,CAAC,CAC7BM,QAAQ,CAACE,MAAM,CAAC,OAAO,CAAEd,KAAK,CAAC,CAC/BY,QAAQ,CAACE,MAAM,CAAC,QAAQ,CAAEZ,MAAM,CAAC,CACjCU,QAAQ,CAACE,MAAM,CAAC,aAAa,CAAEV,WAAW,CAAC,CAE3C,GAAI,CACF,KAAM,CAAAW,GAAG,CAAG,KAAM,CAAArB,KAAK,CAACsB,IAAI,CAAC,kCAAkC,CAAEJ,QAAQ,CAAC,CAC1ED,KAAK,CAACI,GAAG,CAACE,IAAI,CAACC,OAAO,CAAC,CACzB,CAAE,MAAOC,GAAG,CAAE,CACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC,CAClBR,KAAK,CAAC,gBAAgB,CAAC,CACzB,CACF,CAAC,CAED,mBACEb,KAAA,QAAAwB,QAAA,eACE1B,IAAA,OAAA0B,QAAA,CAAI,eAAa,CAAI,CAAC,cACtBxB,KAAA,SAAMyB,QAAQ,CAAEf,YAAa,CAAAc,QAAA,eAC3B1B,IAAA,UAAO4B,IAAI,CAAC,MAAM,CAACC,WAAW,CAAC,OAAO,CAACC,KAAK,CAAE1B,KAAM,CAAC2B,QAAQ,CAAElB,CAAC,EAAIR,QAAQ,CAACQ,CAAC,CAACmB,MAAM,CAACF,KAAK,CAAE,CAAE,CAAC,cAAA9B,IAAA,QAAI,CAAC,cACrGA,IAAA,UAAO4B,IAAI,CAAC,MAAM,CAACC,WAAW,CAAC,QAAQ,CAACC,KAAK,CAAExB,MAAO,CAACyB,QAAQ,CAAElB,CAAC,EAAIN,SAAS,CAACM,CAAC,CAACmB,MAAM,CAACF,KAAK,CAAE,CAAE,CAAC,cAAA9B,IAAA,QAAI,CAAC,cACxGA,IAAA,aAAU6B,WAAW,CAAC,aAAa,CAACC,KAAK,CAAEtB,WAAY,CAACuB,QAAQ,CAAElB,CAAC,EAAIJ,cAAc,CAACI,CAAC,CAACmB,MAAM,CAACF,KAAK,CAAE,CAAE,CAAC,cAAA9B,IAAA,QAAI,CAAC,cAC9GA,IAAA,UAAO4B,IAAI,CAAC,MAAM,CAACG,QAAQ,CAAElB,CAAC,EAAIF,OAAO,CAACE,CAAC,CAACmB,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAE,CAAE,CAAC,cAAAjC,IAAA,QAAI,CAAC,cACrEA,IAAA,WAAQ4B,IAAI,CAAC,QAAQ,CAAAF,QAAA,CAAC,QAAM,CAAQ,CAAC,EACjC,CAAC,EACJ,CAAC,CAEV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}